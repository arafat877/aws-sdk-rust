// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_list_change_sets_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListChangeSetsInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.catalog {
        object.key("Catalog").string(var_1.as_str());
    }
    if let Some(var_2) = &input.filter_list {
        let mut array_3 = object.key("FilterList").start_array();
        for item_4 in var_2 {
             {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_6).into()));
    }
    if let Some(var_7) = &input.next_token {
        object.key("NextToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.sort {
        #[allow(unused_mut)]
        let mut object_9 = object.key("Sort").start_object();
        crate::json_ser::serialize_structure_crate_model_sort(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_entities_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListEntitiesInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_10) = &input.catalog {
        object.key("Catalog").string(var_10.as_str());
    }
    if let Some(var_11) = &input.entity_type {
        object.key("EntityType").string(var_11.as_str());
    }
    if let Some(var_12) = &input.filter_list {
        let mut array_13 = object.key("FilterList").start_array();
        for item_14 in var_12 {
             {
                #[allow(unused_mut)]
                let mut object_15 = array_13.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_15, item_14)?;
                object_15.finish();
            }
        }
        array_13.finish();
    }
    if let Some(var_16) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_16).into()));
    }
    if let Some(var_17) = &input.next_token {
        object.key("NextToken").string(var_17.as_str());
    }
    if let Some(var_18) = &input.sort {
        #[allow(unused_mut)]
        let mut object_19 = object.key("Sort").start_object();
        crate::json_ser::serialize_structure_crate_model_sort(&mut object_19, var_18)?;
        object_19.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListTagsForResourceInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_20) = &input.resource_arn {
        object.key("ResourceArn").string(var_20.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_change_set_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::StartChangeSetInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_21) = &input.catalog {
        object.key("Catalog").string(var_21.as_str());
    }
    if let Some(var_22) = &input.change_set {
        let mut array_23 = object.key("ChangeSet").start_array();
        for item_24 in var_22 {
             {
                #[allow(unused_mut)]
                let mut object_25 = array_23.value().start_object();
                crate::json_ser::serialize_structure_crate_model_change(&mut object_25, item_24)?;
                object_25.finish();
            }
        }
        array_23.finish();
    }
    if let Some(var_26) = &input.change_set_name {
        object.key("ChangeSetName").string(var_26.as_str());
    }
    if let Some(var_27) = &input.change_set_tags {
        let mut array_28 = object.key("ChangeSetTags").start_array();
        for item_29 in var_27 {
             {
                #[allow(unused_mut)]
                let mut object_30 = array_28.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_30, item_29)?;
                object_30.finish();
            }
        }
        array_28.finish();
    }
    if let Some(var_31) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_31.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::TagResourceInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_32) = &input.resource_arn {
        object.key("ResourceArn").string(var_32.as_str());
    }
    if let Some(var_33) = &input.tags {
        let mut array_34 = object.key("Tags").start_array();
        for item_35 in var_33 {
             {
                #[allow(unused_mut)]
                let mut object_36 = array_34.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_36, item_35)?;
                object_36.finish();
            }
        }
        array_34.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_untag_resource_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::UntagResourceInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_37) = &input.resource_arn {
        object.key("ResourceArn").string(var_37.as_str());
    }
    if let Some(var_38) = &input.tag_keys {
        let mut array_39 = object.key("TagKeys").start_array();
        for item_40 in var_38 {
             {
                array_39.value().string(item_40.as_str());
            }
        }
        array_39.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_filter(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::Filter) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_41) = &input.name {
        object.key("Name").string(var_41.as_str());
    }
    if let Some(var_42) = &input.value_list {
        let mut array_43 = object.key("ValueList").start_array();
        for item_44 in var_42 {
             {
                array_43.value().string(item_44.as_str());
            }
        }
        array_43.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_sort(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::Sort) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_45) = &input.sort_by {
        object.key("SortBy").string(var_45.as_str());
    }
    if let Some(var_46) = &input.sort_order {
        object.key("SortOrder").string(var_46.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_change(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::Change) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_47) = &input.change_type {
        object.key("ChangeType").string(var_47.as_str());
    }
    if let Some(var_48) = &input.entity {
        #[allow(unused_mut)]
        let mut object_49 = object.key("Entity").start_object();
        crate::json_ser::serialize_structure_crate_model_entity(&mut object_49, var_48)?;
        object_49.finish();
    }
    if let Some(var_50) = &input.entity_tags {
        let mut array_51 = object.key("EntityTags").start_array();
        for item_52 in var_50 {
             {
                #[allow(unused_mut)]
                let mut object_53 = array_51.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_53, item_52)?;
                object_53.finish();
            }
        }
        array_51.finish();
    }
    if let Some(var_54) = &input.details {
        object.key("Details").string(var_54.as_str());
    }
    if let Some(var_55) = &input.change_name {
        object.key("ChangeName").string(var_55.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::Tag) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_56) = &input.key {
        object.key("Key").string(var_56.as_str());
    }
    if let Some(var_57) = &input.value {
        object.key("Value").string(var_57.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_entity(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::Entity) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_58) = &input.r#type {
        object.key("Type").string(var_58.as_str());
    }
    if let Some(var_59) = &input.identifier {
        object.key("Identifier").string(var_59.as_str());
    }
    Ok(())
}

